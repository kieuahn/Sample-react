{"ast":null,"code":"var _jsxFileName = \"/Users/bbigemoloserr/Documents/Sample react/new-test/src/DisplayList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DisplayList() {\n  _s();\n\n  const [parkList, setParkList] = useState([]);\n  let fetching = [];\n  let parkIdAvailable = [],\n      parkVarAvailable = [];\n  const [currentTime, setCurrentTime] = useState(0);\n  const endpoint = 'https://api.data.gov.hk/v1/carpark-info-vacancy?data=%3Cparam%3E&vehicleTypes=%3Cparam%3E&carparkIds=%3Cparam%3E&extent=%3Cparam%3E&lang=%3Cparam%3E';\n\n  const loading = () => {\n    let TempporaryList = [];\n    let TypeVar = [];\n    fetch(endpoint + '?data=item').then(response => response.json()).then(AfterFetch => {\n      fetching = AfterFetch.results;\n      fetching.map(parking => {\n        if (parking.privateCar !== undefined && parking.privateCar[0].item > 0) {\n          TypeVar.push('Private Car, ');\n        }\n\n        if (parking.LGV !== undefined && parking.LGV[0].item > 0) {\n          TypeVar.push('Low Good Vehicles, ');\n        }\n\n        if (parking.HGV !== undefined && parking.HGV[0].item > 0) {\n          TypeVar.push('High Good Vehicles, ');\n        }\n\n        if (parking.coach !== undefined && parking.coach[0].item > 0) {\n          TypeVar.push('Coach, ');\n        }\n\n        if (parking.motorCycle !== undefined && parking.motorCycle[0].item > 0) {\n          TypeVar.push('Motor Cycle, ');\n        }\n\n        if (TypeVar.length > 0) {\n          parkIdAvailable.push(parking.park_Id) && parkVarAvailable.push(TypeVar);\n        }\n\n        console.log(parkVarAvailable);\n      });\n    }, fetch(endpoint).then(response => response.json()).then(AfterFetch => {\n      fetching = AfterFetch.results.filter(parking => {\n        parkIdAvailable.includes(parking.park_Id) && TempporaryList.push(parkVarAvailable);\n      });\n    }));\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => setCurrentTime(currentTime => currentTime + 1), 30000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    loading();\n  }, [currentTime]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DisplayList, \"hTRoPZl/x/fQ6OrIftR6bUGqVwk=\");\n\n_c = DisplayList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayList\");","map":{"version":3,"sources":["/Users/bbigemoloserr/Documents/Sample react/new-test/src/DisplayList.jsx"],"names":["React","useState","useEffect","DisplayList","parkList","setParkList","fetching","parkIdAvailable","parkVarAvailable","currentTime","setCurrentTime","endpoint","loading","TempporaryList","TypeVar","fetch","then","response","json","AfterFetch","results","map","parking","privateCar","undefined","item","push","LGV","HGV","coach","motorCycle","length","park_Id","console","log","filter","includes","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState , useEffect } from 'react'\nexport default function DisplayList() {\n    const [parkList, setParkList] = useState([]) \n    let fetching =[]\n    let parkIdAvailable =[], parkVarAvailable =[]\n    const [currentTime, setCurrentTime] = useState(0)\n    const endpoint='https://api.data.gov.hk/v1/carpark-info-vacancy?data=%3Cparam%3E&vehicleTypes=%3Cparam%3E&carparkIds=%3Cparam%3E&extent=%3Cparam%3E&lang=%3Cparam%3E'\n    const loading =() => {\n        let TempporaryList =[]\n        let TypeVar =[]\n        fetch(endpoint+'?data=item')\n        .then(response => response.json())\n        .then(AfterFetch => {\n            fetching = AfterFetch.results;\n            fetching.map((parking => {\n                if (parking.privateCar !== undefined && parking.privateCar[0].item >0 ) {\n                    TypeVar.push('Private Car, ')\n                }\n                if (parking.LGV !== undefined && parking.LGV[0].item >0 ) {\n                    TypeVar.push('Low Good Vehicles, ')\n                }\n                if (parking.HGV !== undefined && parking.HGV[0].item >0 ) {\n                    TypeVar.push('High Good Vehicles, ')\n                }\n                if (parking.coach !== undefined && parking.coach[0].item >0 ) {\n                    TypeVar.push('Coach, ') \n                }\n                if (parking.motorCycle !== undefined && parking.motorCycle[0].item >0 ) {\n                    TypeVar.push('Motor Cycle, ') \n                }\n                if (TypeVar.length>0) {\n                    parkIdAvailable.push(parking.park_Id) && parkVarAvailable.push(TypeVar)\n                }\n                console.log(parkVarAvailable)\n            }))},\n                \n                fetch(endpoint)\n                .then(response =>response.json())\n                .then(AfterFetch => {\n                fetching = AfterFetch.results.filter((parking=> {\n                        parkIdAvailable.includes(parking.park_Id) && TempporaryList.push(parkVarAvailable)\n                }))\n    }   ))}\n\n\n    useEffect(() => {\n        const interval = setInterval(() => setCurrentTime(currentTime => currentTime + 1), 30000)\n        return () => clearInterval(interval);} , [])\n    useEffect(() => {\n        loading()\n    }, [currentTime])\n       \n    return(\n        <table>\n            \n        </table> \n        )\n\n        }"]},"metadata":{},"sourceType":"module"}