{"ast":null,"code":"var _jsxFileName = \"/Users/bbigemoloserr/Documents/Sample react/src/test.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudentList() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const endPoint = \"https://l3k2uf0o64.execute-api.ap-southeast-1.amazonaws.com/test/products\";\n  const [name, setName] = useState('');\n  const [id, setId] = useState('');\n\n  const save = () => {\n    if (id === '') {\n      fetch(endPoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(data => load());\n    } else {\n      fetch(endPoint, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          name: name\n        })\n      }).then(data => load());\n    }\n  };\n\n  const deleteStudent = id => {\n    fetch(endPoint + \"/\" + id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    }).then(data => load());\n  };\n\n  const editStudent = (id, name) => {\n    setId(id);\n    setName(name);\n  }; //get data from api\n\n\n  const load = () => {\n    fetch(endPoint).then(response => response.json()).then(data => setData(data.Items));\n  }; //load data automatically\n\n\n  useEffect(() => {\n    load();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), \"Id:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 79\n    }, this), \"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 85\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => save(),\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this), data.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: a.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: a.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteStudent(a.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editStudent(a.id, a.name),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n}\n\n_s(StudentList, \"Bcopz5vB8Cd5hMazpCiYfMMvtDg=\");\n\n_c = StudentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"sources":["/Users/bbigemoloserr/Documents/Sample react/src/test.jsx"],"names":["React","useState","useEffect","StudentList","data","setData","endPoint","name","setName","id","setId","save","fetch","method","headers","body","JSON","stringify","then","load","deleteStudent","editStudent","response","json","Items","e","target","value","map","a"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nexport default function StudentList() {\nconst [data, setData] = useState([]);\nconst endPoint = \"https://l3k2uf0o64.execute-api.ap-southeast-1.amazonaws.com/test/products\" \nconst [name, setName] = useState('')\nconst [id, setId] = useState('')\nconst save = () => {\n    if (id===''){\n       fetch(endPoint, {\n           method: 'POST',\n           headers: {\n           'Content-Type': 'application/json'\n           },\n           body: JSON.stringify({ name: name})\n       }).then(data => load())\n   }\n   else{\n       fetch(endPoint, {\n           method: 'PUT',\n           headers: {\n           'Content-Type': 'application/json'\n           },\n           body: JSON.stringify({ id: id, name: name})\n       }).then(data => load())\n   }\n \n   }\n \nconst deleteStudent = (id) => {\n     fetch(endPoint + \"/\"+id, {\n       method: 'DELETE',\n       headers: {\n         'Content-Type': 'application/json'\n       },\n       body: JSON.stringify({ id: id})\n   }).then(data => load())\n}\n \nconst editStudent = (id, name) => {\n   setId(id)\n   setName(name)\n}\n//get data from api\nconst load = () => {\n  fetch(endPoint)\n    .then(response => response.json())\n    .then(data => setData(data.Items));\n}\n \n//load data automatically\nuseEffect(() => {\n   load()\n }, [])\n \nreturn (\n  <div>\n      <h1>Form</h1>\n \n      Id:<input type=\"text\" value={id} onChange={(e)=>setId(e.target.value)}/><br/> \n      Name:<input type=\"text\" value={name} onChange={(e)=>setName(e.target.value)}/><br/> \n \n      <button onClick={()=> save()}>Save</button>\n      <h1>List</h1>\n       <table border=\"1\">\n       <tr><td>Name</td><td>ID</td><td>Delete</td></tr>\n      {data.map(a => (\n        <tr>\n            <td>{a.name}</td><td>{a.id}</td>\n            <td><button onClick={()=> deleteStudent(a.id)}>Delete</button></td>\n            <td><button onClick={()=> editStudent(a.id, a.name)}>Edit</button></td>\n        </tr>\n      ))}\n       </table>\n  </div>\n);\n}\n"]},"metadata":{},"sourceType":"module"}